---
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: openshift-gitops
  namespace: openshift-gitops
spec:
  applicationSet:
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding: {}
  dex:
    openShiftOAuth: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  kustomizeBuildOptions: --enable-alpha-plugins
  notifications:
      enabled: true
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    policy: g, system:cluster-admins, role:admin
    scopes: '[groups]'
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    env:
    - name: ARGOCD_EXEC_TIMEOUT
      value: 360s
    - name: KUSTOMIZE_PLUGIN_HOME
      value: /.config/kustomize/plugin
    initContainers:
    - args:
      - /.config
      command:
      - /exportkustomize.sh
      image: registry.redhat.io/openshift4/ztp-site-generate-rhel8:v4.10.0
      imagePullPolicy: Always
      name: kustomize-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /.config
        name: kustomize
    resources:
      limits:
        cpu: "8"
        memory: 16Gi
      requests:
        cpu: "1"
        memory: 2Gi
    volumeMounts:
    - mountPath: /.config
      name: kustomize
    volumes:
    - name: kustomize
  # yamllint disable rule:line-length
  resourceCustomizations: |
    bitnami.com/SealedSecret:
      health.lua: |
        hs = {}
        hs.status = "Healthy"
        hs.message = "Controller doesnt report status"
        return hs
    route.openshift.io/Route:
      ignoreDifferences: |
        jsonPointers:
        - /spec/host
    internal.open-cluster-management.io/ManagedClusterInfo:
      health.lua: |
          hs = {}
          if obj.status ~= nil and obj.status.conditions ~= nil then
            for i, condition in ipairs(obj.status.conditions) do
              if condition.status == "True" and condition.reason == "ManagedClusterInfoSynced" then
                hs.status = "Healthy"
                hs.message = "Managed cluster is added to hub cluster"
                return hs
              end
            end
          end
          hs.status = "Progressing"
          hs.message = "Waiting for managed cluster to be deployed."
          return hs
  # yamllint enable rule:line-length
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  server:
      autoscale:
        enabled: false
      grpc:
        ingress:
          enabled: false
      ingress:
        enabled: false
      insecure: true
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 125m
          memory: 128Mi
      route:
        enabled: true
        tls:
          insecureEdgeTerminationPolicy: Redirect
          termination: edge
      service:
        type: ""
  sso:
    dex:
      resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 128Mi
      provider: dex
    tls:
      ca: {}

